<?php

use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;

function dxpr_marketing_cms_demo_content_install() {
  // generate themesettings css and color module css
  require_once(\Drupal::service('extension.list.theme')->getPath('dxpr_theme') . '/dxpr_theme_callbacks.inc');
  dxpr_theme_color_module_css_write('dxpr_theme');
  dxpr_theme_css_cache_build('dxpr_theme');
}

/**
 * Update blog content type with comment field.
 */
function dxpr_marketing_cms_demo_content_update_9001() {
  // Check if the field already exists in the bundle.
  $field_exists = FieldConfig::loadByName(
    'node',
    'blog',
    'field_comment'
  );

  if (!$field_exists) {
    // Create the field storage.
    FieldStorageConfig::create([
      'field_name' => 'field_comment',
      'entity_type' => 'node',
      'type' => 'comment',
      'settings' => [
        'handler' => 'default:comment',
      ],
    ])->save();

    // Create the field instance on the blog content type.
    FieldConfig::create([
      'field_name' => 'field_comment',
      'label' => 'Comment',
      'entity_type' => 'node',
      'bundle' => 'blog',
    ])->save();
  }

  // Configure form display.
  $form_display = \Drupal::service('entity_display.repository')
    ->getFormDisplay('node', 'blog', 'default');

  if ($form_display && !$form_display->getComponent('field_comment')) {
    $form_display->setComponent('field_comment', [
      'region' => 'hidden',
    ])->save();
  }

  // Configure view display.
  $view_display = \Drupal::service('entity_display.repository')
    ->getViewDisplay('node', 'blog', 'default');

  if ($view_display && !$form_display->getComponent('field_comment')) {
    $view_display->setComponent('field_comment', [
      'region' => 'hidden',
    ])->save();

  }
}
